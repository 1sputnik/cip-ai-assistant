#pragma once
//#include "Director.h"
////#include "NeuralNetwork.h"
//
//struct CotainerNetwork;
//typedef CotainerNetwork CnNt;
//
///*
//План:
//
//Добавить глубокое обучение 
//через автоэнкодерный метод
//
//*/
//
//class Teacher
//{
//private:
//	/*Предварительные переменные*/
//	double alfa;
//	size_t itterations;//полностью по группам
//	CnNt container;
//	vector<double> data;
//public:
//	Teacher();
//	Teacher(CnNt train);
//	Teacher(CnNt train, size_t itterations);
//	Teacher(CnNt train, double alfa);
//	Teacher(CnNt train, size_t itterations, double alfa);
//	~Teacher();
//	
//	void SetItterations(size_t itterations);
//	void SetAlfa(double alfa);
//	void SetData(vector<double> data);
//	void TrainBPE();// Обучение нейросети посредством ОРО (Обратного Распространения Ошибки)
//	void TrainAutoencoder();// Обучение нейросети посредством автоэнкодерного метода (не относится к ОРО)
//	void TrainDeepAutoencoder();// Обучение нейросети посредством автоэнкодерного метода 
//	void TrainDeepBolzman();// Обучение нейросети посредством Ограниченной Машины Больцмана ( План на очень далекое будущее)
//
//};


